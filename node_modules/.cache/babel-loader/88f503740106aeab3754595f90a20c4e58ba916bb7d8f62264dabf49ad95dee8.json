{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\FindPanditji\\\\FrontEnd\\\\services\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  onRegister\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    mobile: ''\n  });\n  const [otp, setOtp] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleOtpChange = e => {\n    setOtp(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Send registration data to the backend\n    try {\n      const response = await fetch('http://localhost:8000/services/register_user/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setIsOtpSent(true);\n      } else {\n        setError(data.error || 'Failed to register.');\n      }\n    } catch (err) {\n      setError('Failed to register.');\n    }\n  };\n  const handleOtpSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Verify OTP with the backend\n    try {\n      const response = await fetch('http://localhost:8000/services/verify_otp/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mobileNumber: formData.mobile,\n          otp\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert('OTP verified successfully!');\n        onRegister(); // Call the parent callback if needed\n      } else {\n        setError(data.error || 'Invalid OTP.');\n      }\n    } catch (err) {\n      setError('Failed to verify OTP.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isOtpSent ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          value: formData.firstName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          value: formData.lastName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Mobile Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"mobile\",\n          value: formData.mobile,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleOtpSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter OTP:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: otp,\n          onChange: handleOtpChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"tQKCiIGJ1bbe8cqs+xyPomSM7Zk=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","onRegister","_s","formData","setFormData","firstName","lastName","mobile","otp","setOtp","isOtpSent","setIsOtpSent","error","setError","handleChange","e","target","name","value","handleOtpChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","err","handleOtpSubmit","mobileNumber","alert","children","onSubmit","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/FindPanditji/FrontEnd/services/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Register = ({ onRegister }) => {\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        mobile: '',\r\n    });\r\n    const [otp, setOtp] = useState('');\r\n    const [isOtpSent, setIsOtpSent] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleOtpChange = (e) => {\r\n        setOtp(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        \r\n        // Send registration data to the backend\r\n        try {\r\n            const response = await fetch('http://localhost:8000/services/register_user/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                setIsOtpSent(true);\r\n            } else {\r\n                setError(data.error || 'Failed to register.');\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to register.');\r\n        }\r\n    };\r\n\r\n    const handleOtpSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        \r\n        // Verify OTP with the backend\r\n        try {\r\n            const response = await fetch('http://localhost:8000/services/verify_otp/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ mobileNumber: formData.mobile, otp }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                alert('OTP verified successfully!');\r\n                onRegister(); // Call the parent callback if needed\r\n            } else {\r\n                setError(data.error || 'Invalid OTP.');\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to verify OTP.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isOtpSent ? (\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>\r\n                        First Name:\r\n                        <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} required />\r\n                    </label>\r\n                    <label>\r\n                        Last Name:\r\n                        <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} required />\r\n                    </label>\r\n                    <label>\r\n                        Mobile Number:\r\n                        <input type=\"tel\" name=\"mobile\" value={formData.mobile} onChange={handleChange} required />\r\n                    </label>\r\n                    {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                    <button type=\"submit\">Register</button>\r\n                </form>\r\n            ) : (\r\n                <form onSubmit={handleOtpSubmit}>\r\n                    <label>\r\n                        Enter OTP:\r\n                        <input type=\"text\" value={otp} onChange={handleOtpChange} required />\r\n                    </label>\r\n                    {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                    <button type=\"submit\">Verify OTP</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}