{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\FindPanditji\\\\FrontEnd\\\\services\\\\src\\\\components\\\\Authentication.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Authentication.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Authentication = ({\n  closeForm\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [formData, setFormData] = useState({\n    mobileNumber: '',\n    otp: '',\n    firstName: '',\n    lastName: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = isLogin ? 'http://localhost:8000/services/login/' : 'http://localhost:8000/services/register/';\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Redirect based on user type\n        window.location.href = data.redirect_url;\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close\",\n        onClick: closeForm,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Login' : 'Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [!isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstName\",\n            value: formData.firstName,\n            onChange: handleInputChange,\n            placeholder: \"First Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastName\",\n            value: formData.lastName,\n            onChange: handleInputChange,\n            placeholder: \"Last Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"mobileNumber\",\n          value: formData.mobileNumber,\n          onChange: handleInputChange,\n          placeholder: \"Mobile Number\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: async () => {\n            // Send OTP request\n            await fetch('http://localhost:8000/services/send_otp/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                mobileNumber: formData.mobileNumber\n              })\n            });\n          },\n          children: \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"otp\",\n          value: formData.otp,\n          onChange: handleInputChange,\n          placeholder: \"OTP\",\n          required: !isLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLogin ? 'Login' : 'Signup'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsLogin(!isLogin),\n        children: isLogin ? 'Need an account? Signup' : 'Already have an account? Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Authentication, \"KoKWPmRr8O88GMwOQqZ4g/q1QJU=\");\n_c = Authentication;\nexport default Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Authentication","closeForm","_s","isLogin","setIsLogin","formData","setFormData","mobileNumber","otp","firstName","lastName","handleInputChange","e","name","value","target","handleSubmit","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","data","json","success","window","location","href","redirect_url","alert","message","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/FindPanditji/FrontEnd/services/src/components/Authentication.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Authentication.css';\r\n\r\nconst Authentication = ({ closeForm }) => {\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [formData, setFormData] = useState({\r\n        mobileNumber: '',\r\n        otp: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    });\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const url = isLogin ? 'http://localhost:8000/services/login/' : 'http://localhost:8000/services/register/';\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n            const data = await response.json();\r\n            if (data.success) {\r\n                // Redirect based on user type\r\n                window.location.href = data.redirect_url;\r\n            } else {\r\n                alert(data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"popup-overlay\">\r\n            <div className=\"popup-content\">\r\n                <button className=\"close\" onClick={closeForm}>Ã—</button>\r\n                <h2>{isLogin ? 'Login' : 'Signup'}</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    {!isLogin && (\r\n                        <>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"firstName\"\r\n                                value={formData.firstName}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"First Name\"\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                value={formData.lastName}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Last Name\"\r\n                                required\r\n                            />\r\n                        </>\r\n                    )}\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"mobileNumber\"\r\n                        value={formData.mobileNumber}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Mobile Number\"\r\n                        required\r\n                    />\r\n                    {!isLogin && (\r\n                        <button type=\"button\" onClick={async () => {\r\n                            // Send OTP request\r\n                            await fetch('http://localhost:8000/services/send_otp/', {\r\n                                method: 'POST',\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                body: JSON.stringify({ mobileNumber: formData.mobileNumber }),\r\n                            });\r\n                        }}>\r\n                            Send OTP\r\n                        </button>\r\n                    )}\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"otp\"\r\n                        value={formData.otp}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"OTP\"\r\n                        required={!isLogin}\r\n                    />\r\n                    <button type=\"submit\">{isLogin ? 'Login' : 'Signup'}</button>\r\n                </form>\r\n                <button onClick={() => setIsLogin(!isLogin)}>\r\n                    {isLogin ? 'Need an account? Signup' : 'Already have an account? Login'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Authentication;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}