{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\FindPanditji\\\\FrontEnd\\\\services\\\\src\\\\components\\\\Authorization.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Register from './Register';\nimport VerifyOTP from './VerifyOTP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationFlow = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [userData, setUserData] = useState({});\n  const handleRegister = data => {\n    // Call the API to register the user and send OTP\n    // Assuming registration and OTP sending are successful\n    setUserData(data);\n    setStep(2); // Move to OTP verification step\n  };\n  const handleVerifyOTP = otp => {\n    // Call the API to verify the OTP\n    // Handle success or failure accordingly\n    console.log('Verifying OTP:', otp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: step === 1 ? /*#__PURE__*/_jsxDEV(Register, {\n      onRegister: handleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(VerifyOTP, {\n      onVerifyOTP: handleVerifyOTP\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(RegistrationFlow, \"NFICHXttDrAn0lq5g0l5ZGq1Tpg=\");\n_c = RegistrationFlow;\nexport default RegistrationFlow;\nvar _c;\n$RefreshReg$(_c, \"RegistrationFlow\");","map":{"version":3,"names":["React","useState","Register","VerifyOTP","jsxDEV","_jsxDEV","RegistrationFlow","_s","step","setStep","userData","setUserData","handleRegister","data","handleVerifyOTP","otp","console","log","children","onRegister","fileName","_jsxFileName","lineNumber","columnNumber","onVerifyOTP","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/FindPanditji/FrontEnd/services/src/components/Authorization.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Register from './Register';\r\nimport VerifyOTP from './VerifyOTP';\r\n\r\nconst RegistrationFlow = () => {\r\n    const [step, setStep] = useState(1);\r\n    const [userData, setUserData] = useState({});\r\n\r\n    const handleRegister = (data) => {\r\n        // Call the API to register the user and send OTP\r\n        // Assuming registration and OTP sending are successful\r\n        setUserData(data);\r\n        setStep(2); // Move to OTP verification step\r\n    };\r\n\r\n    const handleVerifyOTP = (otp) => {\r\n        // Call the API to verify the OTP\r\n        // Handle success or failure accordingly\r\n        console.log('Verifying OTP:', otp);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {step === 1 ? (\r\n                <Register onRegister={handleRegister} />\r\n            ) : (\r\n                <VerifyOTP onVerifyOTP={handleVerifyOTP} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegistrationFlow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5C,MAAMW,cAAc,GAAIC,IAAI,IAAK;IAC7B;IACA;IACAF,WAAW,CAACE,IAAI,CAAC;IACjBJ,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMK,eAAe,GAAIC,GAAG,IAAK;IAC7B;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,GAAG,CAAC;EACtC,CAAC;EAED,oBACIV,OAAA;IAAAa,QAAA,EACKV,IAAI,KAAK,CAAC,gBACPH,OAAA,CAACH,QAAQ;MAACiB,UAAU,EAAEP;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAExClB,OAAA,CAACF,SAAS;MAACqB,WAAW,EAAEV;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC7C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAChB,EAAA,CA1BID,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AA4BtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}